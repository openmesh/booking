// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthsColumns holds the columns for the "auths" table.
	AuthsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "source", Type: field.TypeString},
		{Name: "source_id", Type: field.TypeString},
		{Name: "access_token", Type: field.TypeString, Nullable: true},
		{Name: "refresh_token", Type: field.TypeString, Nullable: true},
		{Name: "expiry", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// AuthsTable holds the schema information for the "auths" table.
	AuthsTable = &schema.Table{
		Name:       "auths",
		Columns:    AuthsColumns,
		PrimaryKey: []*schema.Column{AuthsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "auths_users_auths",
				Columns:    []*schema.Column{AuthsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BookingsColumns holds the columns for the "bookings" table.
	BookingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "resource_id", Type: field.TypeInt, Nullable: true},
	}
	// BookingsTable holds the schema information for the "bookings" table.
	BookingsTable = &schema.Table{
		Name:       "bookings",
		Columns:    BookingsColumns,
		PrimaryKey: []*schema.Column{BookingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bookings_resources_bookings",
				Columns:    []*schema.Column{BookingsColumns[6]},
				RefColumns: []*schema.Column{ResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "public_key", Type: field.TypeString},
		{Name: "owner_id", Type: field.TypeInt, Nullable: true},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:       "organizations",
		Columns:    OrganizationsColumns,
		PrimaryKey: []*schema.Column{OrganizationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "organizations_users_owner",
				Columns:    []*schema.Column{OrganizationsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ResourcesColumns holds the columns for the "resources" table.
	ResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "timezone", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "price", Type: field.TypeInt},
		{Name: "booking_price", Type: field.TypeInt},
		{Name: "organization_id", Type: field.TypeInt, Nullable: true},
	}
	// ResourcesTable holds the schema information for the "resources" table.
	ResourcesTable = &schema.Table{
		Name:       "resources",
		Columns:    ResourcesColumns,
		PrimaryKey: []*schema.Column{ResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resources_organizations_resources",
				Columns:    []*schema.Column{ResourcesColumns[9]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SlotsColumns holds the columns for the "slots" table.
	SlotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "day", Type: field.TypeString},
		{Name: "start_time", Type: field.TypeString},
		{Name: "end_time", Type: field.TypeString},
		{Name: "quantity", Type: field.TypeInt, Nullable: true},
		{Name: "resource_id", Type: field.TypeInt, Nullable: true},
	}
	// SlotsTable holds the schema information for the "slots" table.
	SlotsTable = &schema.Table{
		Name:       "slots",
		Columns:    SlotsColumns,
		PrimaryKey: []*schema.Column{SlotsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "slots_resources_slots",
				Columns:    []*schema.Column{SlotsColumns[5]},
				RefColumns: []*schema.Column{ResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UnavailabilitiesColumns holds the columns for the "unavailabilities" table.
	UnavailabilitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "resource_id", Type: field.TypeInt, Nullable: true},
	}
	// UnavailabilitiesTable holds the schema information for the "unavailabilities" table.
	UnavailabilitiesTable = &schema.Table{
		Name:       "unavailabilities",
		Columns:    UnavailabilitiesColumns,
		PrimaryKey: []*schema.Column{UnavailabilitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "unavailabilities_resources_unavailabilities",
				Columns:    []*schema.Column{UnavailabilitiesColumns[5]},
				RefColumns: []*schema.Column{ResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "organization_id", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_organizations_users",
				Columns:    []*schema.Column{UsersColumns[5]},
				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthsTable,
		BookingsTable,
		OrganizationsTable,
		ResourcesTable,
		SlotsTable,
		UnavailabilitiesTable,
		UsersTable,
	}
)

func init() {
	AuthsTable.ForeignKeys[0].RefTable = UsersTable
	BookingsTable.ForeignKeys[0].RefTable = ResourcesTable
	OrganizationsTable.ForeignKeys[0].RefTable = UsersTable
	ResourcesTable.ForeignKeys[0].RefTable = OrganizationsTable
	SlotsTable.ForeignKeys[0].RefTable = ResourcesTable
	UnavailabilitiesTable.ForeignKeys[0].RefTable = ResourcesTable
	UsersTable.ForeignKeys[0].RefTable = OrganizationsTable
}
