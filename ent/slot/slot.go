// Code generated by entc, DO NOT EDIT.

package slot

const (
	// Label holds the string label denoting the slot type in the database.
	Label = "slot"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDay holds the string denoting the day field in the database.
	FieldDay = "day"
	// FieldStartTime holds the string denoting the starttime field in the database.
	FieldStartTime = "start_time"
	// FieldEndTime holds the string denoting the endtime field in the database.
	FieldEndTime = "end_time"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldResourceId holds the string denoting the resourceid field in the database.
	FieldResourceId = "resource_id"
	// EdgeResource holds the string denoting the resource edge name in mutations.
	EdgeResource = "resource"
	// Table holds the table name of the slot in the database.
	Table = "slots"
	// ResourceTable is the table that holds the resource relation/edge.
	ResourceTable = "slots"
	// ResourceInverseTable is the table name for the Resource entity.
	// It exists in this package in order to avoid circular dependency with the "resource" package.
	ResourceInverseTable = "resources"
	// ResourceColumn is the table column denoting the resource relation/edge.
	ResourceColumn = "resource_id"
)

// Columns holds all SQL columns for slot fields.
var Columns = []string{
	FieldID,
	FieldDay,
	FieldStartTime,
	FieldEndTime,
	FieldQuantity,
	FieldResourceId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
